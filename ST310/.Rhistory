n <- 2000
# Generate categorical predictor(s)
categories <- c("lion", "dog", "parakeet")
cat_var <- factor(sample(categories, n, prob = c(2, 2, 1), replace = TRUE))
table(cat_var)
# Generate numeric predictor(s)
x <- 2 * (runif(n) - 1/2)
# Data frame version of predictors
predictors <- data.frame(x1 = x, x2 = cat_var)
head(predictors)
# CEF
CEF <- function(x1, x2) {
if_else(x2 == "lion",
# first case
1/2 + x1^4/2,
ifelse(x2 == "dog",
# second case
1 - x1^4,
# last case
1 + x1^3 + x1^4
)
)
}
training_data <- predictors |> mutate(y = CEF(x1, x2) + rnorm(n, sd = .2))
# Load necessary library
library(randomForest)
install.packages("randomForest")
# Load necessary library
library(randomForest)
library(caret)
# Original Data Generation (Complex Relationship)
set.seed(123)
n <- 1000
x <- runif(n, 500, 2500)  # Square footage
z <- sample(1:5, n, replace = TRUE)  # Number of bedrooms
y <- 100 + 0.05 * x + 20 * sin(z) + rnorm(n, mean = 0, sd = 30)  # Non-linear relationship with noise
original_data <- data.frame(x = x, z = z, y = y)
# Train a Random Forest model on the original data
set.seed(123)
rf_model <- randomForest(y ~ x + z, data = original_data)
# Concept Shift for OOD Data (Simplified Relationship, Reduced Noise)
set.seed(124)
x_ood <- runif(n, 500, 2500)  # Same range of square footage
z_ood <- sample(1:5, n, replace = TRUE)  # Number of bedrooms (same distribution)
y_ood <- 100 + 0.05 * x_ood + 5 * z_ood + rnorm(n, mean = 0, sd = 15)  # Linear relationship with reduced noise
ood_data <- data.frame(x = x_ood, z = z_ood, y = y_ood)
# Evaluate the model on OOD Data
y_pred_ood <- predict(rf_model, ood_data)
# Calculate RMSE on OOD data
ood_rmse <- sqrt(mean((ood_data$y - y_pred_ood)^2))
cat("RMSE on OOD Data:", ood_rmse, "\n")
# Calculate RMSE on Original Data (as a baseline)
y_pred_original <- predict(rf_model, original_data)
original_rmse <- sqrt(mean((original_data$y - y_pred_original)^2))
cat("RMSE on Original Data:", original_rmse, "\n")
# Load necessary library
library(randomForest)
library(caret)
# Original Data Generation (Complex Relationship)
n <- 1000
x <- runif(n, 500, 2500)  # Square footage
z <- sample(1:5, n, replace = TRUE)  # Number of bedrooms
y <- 100 + 0.05 * x + 20 * sin(z) + rnorm(n, mean = 0, sd = 30)  # Non-linear relationship with noise
training_data <- data.frame(x = x, z = z, y = y)
# Train a Random Forest model on the original data
rf_model <- randomForest(y ~ x + z, data = training_data)
# Concept Shift for OOD Data (Simplified Relationship, Reduced Noise)
x_ood <- runif(n, 500, 2500)  # Same range of square footage
z_ood <- sample(1:5, n, replace = TRUE)  # Number of bedrooms (same distribution)
y_ood <- 100 + 0.05 * x_ood + 5 * z_ood + rnorm(n, mean = 0, sd = 15)  # Linear relationship with reduced noise
y_test <- 100 + 0.05 * x_ood + 20 * sin(z_ood) + rnorm(n, mean = 0, sd = 30)
ood_data <- data.frame(x = x_ood, z = z_ood, y = y_ood)
test_data <- data.frame(x = x_ood, z = z_ood, y = y_test)
# Evaluate the model on OOD Data
y_pred_ood <- predict(rf_model, ood_data)
# Calculate RMSE on OOD data
ood_rmse <- sqrt(mean((ood_data$y - y_pred_ood)^2))
cat("RMSE on OOD Data:", ood_rmse, "\n")
# Calculate RMSE on Original Data (as a baseline)
y_pred_original <- predict(rf_model, test_data)
original_rmse <- sqrt(mean((test_data$y - y_pred_original)^2))
cat("RMSE on Original Data:", original_rmse, "\n")
# Load necessary library
library(randomForest)
library(caret)
# Original Data Generation (Complex Relationship)
n <- 1000
x <- runif(n, 500, 2500)  # Square footage
z <- sample(1:5, n, replace = TRUE)  # Number of bedrooms
y <- 100 + 0.05 * x + 20 * sin(z)**2 + rnorm(n, mean = 0, sd = 30)  # Non-linear relationship with noise
training_data <- data.frame(x = x, z = z, y = y)
# Train a Random Forest model on the original data
rf_model <- randomForest(y ~ x + z, data = training_data)
# Concept Shift for OOD Data (Simplified Relationship, Reduced Noise)
x_ood <- runif(n, 500, 2500)  # Same range of square footage
z_ood <- sample(1:5, n, replace = TRUE)  # Number of bedrooms (same distribution)
y_ood <- 100 + 0.05 * x_ood + 5 * z_ood + rnorm(n, mean = 0, sd = 5)  # Linear relationship with reduced noise
y_test <- 100 + 0.05 * x_ood + 20 * sin(z_ood)**2 + rnorm(n, mean = 0, sd = 30)
ood_data <- data.frame(x = x_ood, z = z_ood, y = y_ood)
test_data <- data.frame(x = x_ood, z = z_ood, y = y_test)
# Evaluate the model on OOD Data
y_pred_ood <- predict(rf_model, ood_data)
# Calculate RMSE on OOD data
ood_rmse <- sqrt(mean((ood_data$y - y_pred_ood)^2))
cat("RMSE on OOD Data:", ood_rmse, "\n")
# Calculate RMSE on Original Data (as a baseline)
y_pred_original <- predict(rf_model, test_data)
original_rmse <- sqrt(mean((test_data$y - y_pred_original)^2))
cat("RMSE on Original Data:", original_rmse, "\n")
